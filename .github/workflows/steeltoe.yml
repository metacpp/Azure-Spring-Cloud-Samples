# This is a basic workflow to help you get started with Actions

name: Steeltoe-CD

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ steeltoe ]
    paths-ignore:
      - '**/*.md'
      - '**/*.gitignore'
      - '**/*.gitattributes'
env:
  planet-service-root: ${{env.working-directory}}/steeltoe-sample/src/planet-weather-provider
  solar-service-root: ${{env.working-directory}}/steeltoe-sample/src/solar-system-weather
  resource-group-name: steeltoe-ci-test-rg
  service-name: steeltoe-ci-test
  netcore-version: '3.1.x'
  extension-source: https://steeltoe.blob.core.windows.net/cli/spring_cloud-0.5.1-py2.py3-none-any.whl
      
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    name: Build and Deploy
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v2

      - name: Setup .NET Core SDK ${{ env.netcore-version }}
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.netcore-version }}
          
      - name: Login to Azure
        uses: azure/login@v1.1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: install Azure CLI extension and set defaults
        run: |
          az extension add --source ${{env.extension-source}} --y
          az configure --defaults group=${{ env.resource-group-name }}
          az configure --defaults spring-cloud=${{ env.service-name }}
      
      - name: Restore, Build, Publish and Deploy planet app
        working-directory: ${{env.planet-service-root}}
        run: |
          dotnet publish --configuration Release
          az spring-cloud app deploy -n planet-weather-provider --runtime-version NetCore_31 --main-entry Microsoft.Azure.SpringCloud.Sample.PlanetWeatherProvider.dll --artifact-path ./publish-deploy-planet.zip

      - name: Restore, Build, Publish and Deploy solar app
        working-directory: ${{env.solar-service-root}}
        run: |
          dotnet publish --configuration Release
          az spring-cloud app deploy -n solar-system-weather --runtime-version NetCore_31 --main-entry Microsoft.Azure.SpringCloud.Sample.SolarSystemWeather.dll --artifact-path ./publish-deploy-solar.zip
        
